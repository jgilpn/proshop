[{"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\index.js":"1","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\App.js":"2","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Header.js":"4","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Product.js":"7","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\store.js":"10","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Message.js":"14","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\userReducers.js":"20","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\LoginScreen.js":"22","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\FormContainer.js":"23","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\userActions.js":"24","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"25","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"26","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"27","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"28","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\orderReducers.js":"31","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\OrderScreen.js":"34"},{"size":587,"mtime":1609460644757,"results":"35","hashOfConfig":"36"},{"size":1557,"mtime":1609659355832,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":1844,"mtime":1609563189473,"results":"39","hashOfConfig":"36"},{"size":328,"mtime":1609440397183,"results":"40","hashOfConfig":"36"},{"size":1112,"mtime":1609544454689,"results":"41","hashOfConfig":"36"},{"size":843,"mtime":1609444324239,"results":"42","hashOfConfig":"36"},{"size":1698,"mtime":1609561136623,"results":"43","hashOfConfig":"36"},{"size":3976,"mtime":1609560992403,"results":"44","hashOfConfig":"36"},{"size":1947,"mtime":1609665801896,"results":"45","hashOfConfig":"36"},{"size":1132,"mtime":1609543478079,"results":"46","hashOfConfig":"36"},{"size":368,"mtime":1609542718382,"results":"47","hashOfConfig":"36"},{"size":1234,"mtime":1609543621179,"results":"48","hashOfConfig":"36"},{"size":250,"mtime":1609463980736,"results":"49","hashOfConfig":"36"},{"size":430,"mtime":1609463894405,"results":"50","hashOfConfig":"36"},{"size":3989,"mtime":1609578187305,"results":"51","hashOfConfig":"36"},{"size":1199,"mtime":1609579230197,"results":"52","hashOfConfig":"36"},{"size":238,"mtime":1609579093160,"results":"53","hashOfConfig":"36"},{"size":1358,"mtime":1609584803782,"results":"54","hashOfConfig":"36"},{"size":2137,"mtime":1609574286713,"results":"55","hashOfConfig":"36"},{"size":850,"mtime":1609573362436,"results":"56","hashOfConfig":"36"},{"size":2207,"mtime":1609573054917,"results":"57","hashOfConfig":"36"},{"size":378,"mtime":1609578083451,"results":"58","hashOfConfig":"36"},{"size":3688,"mtime":1609574234007,"results":"59","hashOfConfig":"36"},{"size":3160,"mtime":1609572944501,"results":"60","hashOfConfig":"36"},{"size":3721,"mtime":1609574422369,"results":"61","hashOfConfig":"36"},{"size":2536,"mtime":1609578489180,"results":"62","hashOfConfig":"36"},{"size":1288,"mtime":1609576111132,"results":"63","hashOfConfig":"36"},{"size":1836,"mtime":1609579537429,"results":"64","hashOfConfig":"36"},{"size":5495,"mtime":1609585543063,"results":"65","hashOfConfig":"36"},{"size":2249,"mtime":1609665768822,"results":"66","hashOfConfig":"36"},{"size":3280,"mtime":1609665899185,"results":"67","hashOfConfig":"36"},{"size":746,"mtime":1609665684727,"results":"68","hashOfConfig":"36"},{"size":6791,"mtime":1609664341960,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1xw3oq",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\index.js",[],["142","143"],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\App.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\store.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\RegisterScreen.js",["144"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport FormContainer from '../components/FormContainer.js'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('redirect=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userRegister, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Adress</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an account already?{' '}\r\n          <Link to={redirect ? `/login?redirect=/` : '/login'}>Login</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\ProfileScreen.js",["145"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Adress</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\John\\Desktop\\Practice\\React\\proshop\\frontend\\src\\screens\\OrderScreen.js",["146"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/v1/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || order._id !== orderId || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <Row>\r\n                <Col xs={3}>\r\n                  <strong>Name:</strong>\r\n                </Col>\r\n                <Col xs={9}>{order.user.name}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={3}>\r\n                  <strong>Email:</strong>\r\n                </Col>\r\n                <Col xs={9}>\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={3}>\r\n                  <strong>Address:</strong>\r\n                </Col>\r\n                <Col xs={9}>\r\n                  <p>\r\n                    {order.shippingAddress.address},{' '}\r\n                    {order.shippingAddress.city},{' '}\r\n                    {order.shippingAddress.postalCode},{' '}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <Row>\r\n                <Col xs={3}>\r\n                  <strong>Method:</strong>\r\n                </Col>\r\n                <Col xs={9}>\r\n                  <p>{order.paymentMethod}</p>\r\n                </Col>\r\n              </Row>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row className='align-items-center'>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col md={5}>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={5}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":28,"column":6,"nodeType":"153","endLine":28,"endColumn":39,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":16},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["162"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},"Update the dependencies array to be: [history, userRegister, redirect, userInfo]",{"range":"165","text":"166"},[1033,1066],"[history, userRegister, redirect, userInfo]"]